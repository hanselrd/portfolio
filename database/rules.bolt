/***********************************************************
  Users

************************************************************/
path /users {
  index() { ['displayName', 'email'] }
}

path /users/{uid} is User {
  read() { isSignedIn() }
}
type User {
  displayName: String;
  photoUrl: String | Null;
  email: String | Null;
  provider: String | Null;
  role: Number;
  created: Number;
  online: Boolean;
}

function hasRole(role) { isSignedIn() && prior(root).users[auth.uid].role >= role }
function isOwner() { hasRole(30) }
function isAdmin() { hasRole(20) }
function isMod() { hasRole(10) }

/***********************************************************
  Chat

************************************************************/
path /chat is Chat {
  read() { isSignedIn() }
  write() { isMod() }
}
type Chat {
  announcement: ChatMessage | Null;
  messages: ChatMessage[];
  enabled: Boolean;
}
type ChatMessage {
  uid: String;
  text: String;
  created: Number;
}

path /queue/chat/messages/{uid} is String[] {
  read() { isCurrentUser(uid) }
  create() { isCurrentUser(uid) && isChatEnabled() }
}

function isChatEnabled() { prior(root).chat.enabled }

/***********************************************************
  User Readable

************************************************************/
// path /userReadable/{objectType}/{uid} {
//   read() { isCurrentUser(uid) || isAdmin() }
// }

/***********************************************************
  User Createable

************************************************************/
// path /userCreateable/{objectType}/{uid} {
//   create() { isCurrentUser(uid) || isAdmin() }
// }

/***********************************************************
  User Updateable

************************************************************/
// path /userUpdateable/{objectType}/{uid} {
//   update() { isCurrentUser(uid) || isAdmin() }
// }

/***********************************************************
  User Deleteable

************************************************************/
// path /userDeleteable/{objectType}/{uid} {
//   delete() { isCurrentUser(uid) || isAdmin() }
// }

/***********************************************************
  User Writeable

************************************************************/
// path /userWriteable/{objectType}/{uid} {
//   write() { isCurrentUser(uid) || isAdmin() }
// }

path /userWriteable/updateUser/{uid} is UpdateUser {
  write() { isCurrentUser(uid) || isAdmin() }
}
type UpdateUser {
  displayName: DisplayNameString | Null;
  photoUrl: String | Null;
  online: Boolean | Null;
}
type DisplayNameString extends String {
  validate() { this.length >= 3 && this.length <=25 }
}

path /userWriteable/messageQueue/{uid} is MessageQueueString[];
type MessageQueueString extends String {
  validate() { this.length > 0 && this.length <= 256 }
}

/***********************************************************
  User Owned

************************************************************/
// path /userOwned/{objectType}/{uid} {
//   read() { isCurrentUser(uid) || isAdmin() }
//   write() { isCurrentUser(uid) || isAdmin() }
// }

path /userOwned/settings/{uid} is Settings {
  read() { isCurrentUser(uid) || isAdmin() }
  write() { isCurrentUser(uid) || isAdmin() }
}
type Settings {
  showEmail: Boolean;
}

/***********************************************************
  Helper Functions

************************************************************/
function isSignedIn() { auth != null }
function isCurrentUser(uid) { isSignedIn() && auth.uid == uid }
