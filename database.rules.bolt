/*****************************************
 *
 *                types
 *
******************************************/

type UserID extends String {
  validate() { prior(root).users[this] != null }
}

type UserDisplayName extends String {
  validate() { this.length >= 3 && this.length <= 25 }
}

type ChatText extends String {
  validate() { this.length > 0 && this.length <= 200 }
}

/*****************************************
 *
 *              public
 *
******************************************/

type User extends W_User {
  email: String;
  role: Number | Null;
  provider: String;
  createdAt: Number;
}

type ChatMessage extends W_ChatMessage {
  author: UserID;
  createdAt: Number;
}

path /users/{uid} is User {
  index() { ['displayName'] }
  read() { isSignedIn() }
}

path /chat/{id} is ChatMessage {
  index() { ['createdAt'] }
  read() { isSignedIn() }
  write() { isMod() }
}

/*****************************************
 *
 *              readonly
 *
******************************************/

path /readonly/{uid} {
  read() { isCurrentUser(uid) || isAdmin() }
}

/*****************************************
 *
 *              writeonly
 *
******************************************/

type W_User {
  displayName: UserDisplayName | Null;
  online: Boolean | Null;
}

type W_ChatMessage {
  text: ChatText;
}

path /writeonly/{uid} {
  write() { isCurrentUser(uid) || isAdmin() }

  path /user is W_User;
  path /chat is W_ChatMessage;
}

/*****************************************
 *
 *              readwrite
 *
******************************************/

type RW_Settings {
  showEmail: Boolean;
}

path /readwrite/{uid} {
  read() { isCurrentUser(uid) || isAdmin() }
  write() { isCurrentUser(uid) || isAdmin() }

  path /settings is RW_Settings;
}

/*****************************************
 *
 *              functions
 *
******************************************/

function isSignedIn() { auth != null }

function isCurrentUser(uid) { isSignedIn() && auth.uid == uid }

function isRole(role) { isSignedIn() && prior(root).users[auth.uid].role >= role }

function isAdmin() { isRole(20) }

function isMod() { isRole(10) }
